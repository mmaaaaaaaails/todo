{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","clazz","key","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","classNames","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.aef59447.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel'\r\n\r\nexport default SearchPanel;\r\n","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState( { term } );\r\n        this.props.onSearchChange(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                    className=\"form-control search-input\"\r\n                    placeholder=\"type to search\"\r\n                    value={this.state.term}\r\n                    onChange={this.onSearchChange}/>\r\n        );\r\n    }\r\n};\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ];\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}>\r\n                        {label}</button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import TodoListItem from './todo-list-item'\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n\r\n        <span className={ classNames }>\r\n            <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={ onToggleDone }>\r\n\r\n                { label }\r\n            </span>\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={ onToggleImportant }>\r\n                <i className=\"fa fa-exclamation\" />\r\n            </button>\r\n\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\" />\r\n            </button>\r\n        </span>\r\n        )\r\n    }\r\n}\r\n","import TodoList from  './todo-list'\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css'\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const elements = todos.map((item) => {\r\n\r\n        const { id, ...itemProps  } = item;\r\n\r\n        return (\r\n            <li key={item.id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                { ...itemProps }\r\n                onDeleted={ () => onDeleted(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleDone={() => onToggleDone(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                    onSubmit={this.onSubmit}>\r\n\r\n                <input type=\"text\"\r\n                    className=\"form-control new-todo-label\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"What needs to be done\"\r\n                    value={this.state.label}/>\r\n\r\n                <button className=\"btn btn-outline-secondary myBtn\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import App from './app'\r\n\r\nexport default App\r\n","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport TodoList from '../todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('drink coffee'),\r\n            this.createTodoItem('make awesome app'),\r\n            this.createTodoItem('have a lunch'),\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    };\r\n\r\n    addItem = (text) => {\r\n\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        })\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]}\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    }\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > - 1;\r\n        })\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange} />\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}\r\n                        />\r\n                </div>\r\n\r\n                <TodoList todos={visibleItems}\r\n                onDeleted={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone}\r\n                />\r\n\r\n                <ItemAddForm onItemAdded={this.addItem} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './components/app'\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}